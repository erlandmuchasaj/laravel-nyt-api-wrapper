{
  "swagger": "2.0",
  "info": {
    "description": "This is the **NYT** API documentation and usage guide.\n\r The API is intended to be used by third party providers that want to integrate their platform with **NYT**.",
    "version": "1.0.0",
    "title": "Swagger NYT - OpenAPI 1.0",
    "termsOfService": "https://developer.nytimes.com/terms",
    "contact": {
      "name": "NYT",
      "url": "https://developer.nytimes.com/",
      "email": "code@nytimes.com"
    },
    "license": {
      "name": "License (MIT)",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "tags": [
    {
      "name": "health",
      "description": "Check if the API is up and running."
    },
    {
      "name": "BooksAPI",
      "description": "The Books API provides information about book reviews and The New York Times Best Sellers lists."
    }
  ],
  "paths": {
    "/api/v1/bestsellers": {
      "get": {
        "tags": [
          "BooksAPI"
        ],
        "summary": "Get Best Sellers list history.",
        "description": "Get the list history of all bestseller books of NYT. ",
        "operationId": "getBestSellerList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "in": "query",
            "name": "author",
            "description":"The author of the best seller. When searching the author field, you can specify any combination of first, middle and last names.",
            "maxLength": 255,
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "title",
            "description":"The title of the best seller. When searching, you can specify a portion of a title or a full title.",
            "maxLength": 255,
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description":"Sets the starting point of the result set (0, 20, ...)",
            "required": false,
            "minimum": 0,
            "default": 0,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "cache",
            "description":"If you need a fresh data from the endpoint, Set this to `0`.",
            "required": false,
            "default": 1,
            "enum": [
              0,
              1
            ],
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "isbn[]",
            "description":"International Standard Book Number, 10 or 13 digits",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "isbn",
              "maxLength": 13,
              "minLength": 10,
              "pattern": "^(97(8|9))?\\d{9}(\\d|X)$"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "List of books",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/BookResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401":{
            "description":"Unauthenticated"
          },
          "403":{
            "description":"Unauthorized"
          },
          "404":{
            "description":"Not Found"
          },
          "419":{
            "description":"CSRF token mismatch."
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503":{
            "description":"Service Unavailable – We’re temporarily offline for maintenance. Please try again later."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Check health.",
        "description": "Check Laravel API wrapper health status, also the API health status.",
        "operationId": "getAppHealth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
        ],
        "responses": {
          "200": {
            "description": "System Health status",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/HealthResponse"
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "HealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum" : ["success", "error"]
        },
        "timestamp": {
          "type": "string",
          "format" : "date-time"
        },
        "message": {
          "type": "string",
          "example": "All systems operational."
        }
      }
    },
    "BookMeta": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "OK",
            "ERROR"
          ]
        },
        "num_results": {
          "type": "integer",
          "format": "int32",
          "example": 3600
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "cache_status": {
          "type": "string",
          "default": "hit",
          "enum": [
            "hit",
            "miss"
          ]
        },
        "copyright": {
          "type": "string"
        }
      }
    },
    "Book": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "#GIRLBOSS"
        },
        "description": {
          "type": "string",
          "example": "An online fashion retailer traces her path to success."
        },
        "contributor": {
          "type": "string",
          "example": "by Sophia Amoruso"
        },
        "author": {
          "type": "string",
          "example": "Sophia Amoruso"
        },
        "contributor_note": {
          "type": "string",
          "example": ""
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 9.99
        },
        "age_group": {
          "type": "string",
          "example": ""
        },
        "publisher": {
          "type": "string",
          "example": "Portfolio/Penguin/Putnam"
        },
        "isbns": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "isbn10": {
                "type": "string",
                "format": "isbn",
                "example": "039916927X"
              },
              "isbn13": {
                "type": "string",
                "format": "isbn",
                "example": "9780399169274"
              }
            }
          }
        },
        "ranks_history": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "primary_isbn10": {
                "type": "string",
                "format": "isbn"
              },
              "primary_isbn13": {
                "type": "string",
                "format": "isbn"
              },
              "rank": {
                "type": "integer",
                "format": "int32"
              },
              "list_name": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "published_date": {
                "type": "string",
                "format": "date-time"
              },
              "bestsellers_date": {
                "type": "string",
                "format": "date-time"
              },
              "weeks_on_list": {
                "type": "integer",
                "format": "int32"
              },
              "ranks_last_week": {
                "type": "string"
              },
              "asterisk": {
                "type": "integer",
                "format": "int32"
              },
              "dagger": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "reviews": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "book_review_link": {
                "type": "string",
                "format": "uri"
              },
              "first_chapter_link": {
                "type": "string",
                "format": "uri"
              },
              "sunday_review_link": {
                "type": "string",
                "format": "uri"
              },
              "article_chapter_link": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    },
    "BookResponse" : {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "$ref": "#/definitions/BookMeta"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Book"
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "object",
          "properties": {
            "field_name": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "For more information please contact us!",
    "url": "https://developer.nytimes.com/"
  }
}
